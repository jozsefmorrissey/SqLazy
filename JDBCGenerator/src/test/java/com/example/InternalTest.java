package com.example;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

import com.dataAccess.bean.Field;
import com.dataAccess.bean.JdbcType;
import com.dataAccess.bean.Parameter;
import com.dataAccess.bean.Query;
import com.generate.generation.GenerateBean;
import com.generate.parce.bean.Wrapper.JdbcTypeWrapper;
import com.squareup.javapoet.AnnotationSpec;

public class InternalTest
{
	JdbcType jdbcT;
	
	public static void main(String...ags) {
		new InternalTest().buildXml("src/main/resources/newJdbcTemplates.xml");
	}
	
	@Before
	public void build() {
		buildXml("src/main/resources/mockJdbcTemplates.xml");
		buildObject();
	}
	
	@Test
	public void fakeTest() throws IOException, ClassNotFoundException {
		List<Parameter> params = new ArrayList<Parameter>();
		List<Field> fields = new ArrayList<Field>();
		Field fid = new Field("ID");
		List<AnnotationSpec> annotations = new ArrayList<AnnotationSpec>();
		annotations.add(AnnotationSpec.builder(javax.persistence.Id.class).build());
		annotations.add(AnnotationSpec.builder(javax.persistence.Column.class).build());

		AnnotationSpec.Builder annSpec = AnnotationSpec.builder(javax.persistence.GeneratedValue.class);
		annSpec.addMember("strategy", "$T.SEQUENCE", javax.persistence.GenerationType.SEQUENCE.getClass());
		annSpec.addMember("generator", "\"USER_ID_SEQ\"");
		annotations.add(annSpec.build());
		fid.setAnnotations(annotations);
		System.out.println(annotations.size());
		fields.add(fid);
		fields.add(new Field("PASSWORD"));
		fields.add(new Field("USER_NAME"));
		fields.add(new Field("EMAIL"));
		List<Query> querys = new ArrayList<Query>();
		querys.add(new Query("USER", "", fields, params));
		JdbcTypeWrapper jtw = new JdbcTypeWrapper("User", "Doesnt Matter", "com.stuff.religion", querys);

		annotations = new ArrayList<AnnotationSpec>();
		annotations.add(AnnotationSpec.builder(javax.persistence.Entity.class).build());
		annotations.add(AnnotationSpec.builder(javax.persistence.Table.class).build());
		annotations.add(AnnotationSpec.builder(lombok.Data.class).build());
		
		jtw.setAnnotations("bean", annotations);

		
		new GenerateBean(jtw).generate();
		System.out.println("here" + jtw.getFields());
		assert(true);
	}


	private void buildXml(String path)
	{
		try
		{
			System.out.println(System.getProperty("user.dir"));
			System.out.println(Paths.get("./src/main/resources/jdbcTemplates.xml").toString());
			encoded = Files.readAllBytes(Paths.get("./src/main/resources/jdbcTemplates.xml"));
			Files.write(Paths.get(path), encoded);
//			printArray(100, encoded);
		} catch (IOException e)
		{
			e.printStackTrace();
		}		
	}
	
	public void printArray(int lineLength, byte[] array) {
		String line = "\tbyte[] encoded = new byte[]{";
		for(int index = 0; index < array.length; index++)
		{
			String byteStr = "" + array[index];
			if(line.length() < lineLength - byteStr.length() - 2)
			{
				line += array[index] + ", ";
			}
			else
			{
				System.out.println(line);
				line = "\t\t\t";
			}
		}
		System.out.println(line.substring(0, line.length() - 2).concat("};"));
	}


	private void buildObject()
	{
//		Map<String, Query> queries = new HashMap<String, Query>();
//		
//		String format = "Select HELP_WANTED, PARTY_POOPER, BILL_VERMIN " +
//							"from diningRoom " +
//							"where $$BILL_VERMIN$$ = BILL_VERMIN " +
//							"AND $$PARTY_POOPER$$ = PARTY_POOPER";
//		
//		List<String> columns = new ArrayList<String>();
//		columns.add("HELP_WANTED");
//		columns.add("PARTY_POOPER");
//		columns.add("BILL_VERMIN");
//		
//		List<Substitution> subs = new ArrayList<Substitution>();
//		subs.add(new Substitution("BILL_VERMIN", null));
//		subs.add(new Substitution("PARTY_POOPER", "java.lang.Long"));
//
//		Query q = new Query(format, columns, subs);
//		queries.put("getNonSense", q);
//		
//		format = "Select HELP_WANTED, PARTY_POOPER, BILL_VERMIN " +
//				"from diningRoom " +
//				"where $$BREAD_BUTTER$$ = BREAD_BUTTER";
//
//		columns = new ArrayList<String>();
//		columns.add("HELP_WANTED");
//		columns.add("BILL_VERMIN");
//		
//		subs = new ArrayList<Substitution>();
//		subs.add(new Substitution("BREAD_BUTTER", null));
//		
//		q = new Query(format, columns, subs);
//		queries.put("getEverything", q);
//		
//		jdbcT = new JdbcType("ProviderServiceLocation", queries);
	}
	
	
	@Test
	public void testParser() {
//		List<JdbcType> jdbcTypes = new ParceJdbcXML().xmlParser();
		
		//System.out.println(jdbcTypes.get(0));
//		System.out.println(StringUtil.arrayPretty(jdbcTypes, 0));


//		Reflections r = new Reflections();
//		Set<Class<? extends DAOMap>> maps = r.getSubTypesOf(DAOMap.class);
//		for(Class<?> m : maps)
//			System.out.println(m.getSimpleName());
		//assert(jdbcT.equals(jdbcTypes.get(0)));
	}
	
	byte[] encoded = new byte[]{60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 
			46, 48, 34, 63, 62, 13, 10, 60, 106, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 115, 
			13, 10, 9, 60, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115, 62, 13, 10, 9, 9, 60, 99, 108, 
			115, 115, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 62, 13, 10, 9, 9, 9, 60, 97, 
			110, 111, 116, 97, 116, 105, 111, 110, 62, 79, 118, 101, 114, 114, 105, 100, 101, 60, 47, 97, 
			110, 111, 116, 97, 116, 105, 111, 110, 62, 13, 10, 9, 9, 60, 47, 99, 108, 97, 115, 115, 65, 
			110, 111, 116, 97, 116, 105, 111, 110, 115, 62, 13, 10, 9, 9, 60, 115, 117, 112, 101, 114, 112, 
			107, 103, 62, 99, 111, 109, 47, 103, 97, 114, 98, 97, 103, 101, 47, 102, 105, 108, 108, 60, 47, 
			117, 112, 101, 114, 112, 99, 107, 103, 62, 13, 10, 9, 9, 60, 115, 117, 112, 101, 114, 99, 108, 
			115, 115, 110, 97, 109, 101, 62, 70, 97, 107, 101, 83, 117, 112, 101, 114, 60, 47, 115, 117, 
			101, 114, 99, 108, 97, 115, 115, 110, 97, 109, 101, 62, 13, 10, 9, 9, 13, 10, 9, 9, 60, 115, 
			112, 101, 114, 99, 108, 97, 115, 115, 62, 99, 111, 109, 46, 103, 97, 114, 98, 97, 103, 101, 46, 
			105, 108, 108, 46, 70, 97, 107, 101, 83, 117, 112, 101, 114, 60, 47, 115, 117, 112, 101, 114, 
			108, 97, 115, 115, 62, 13, 10, 9, 9, 60, 113, 117, 101, 114, 121, 70, 117, 110, 99, 116, 105, 
			110, 78, 97, 109, 101, 62, 60, 47, 113, 117, 101, 114, 121, 70, 117, 110, 99, 116, 105, 111, 
			78, 97, 109, 101, 62, 9, 9, 13, 10, 9, 9, 60, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 
			62, 13, 10, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 
			60, 112, 97, 114, 97, 109, 62, 13, 10, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 78, 97, 109, 
			62, 115, 97, 115, 113, 117, 97, 116, 99, 104, 97, 110, 111, 110, 111, 109, 111, 117, 115, 60, 
			112, 97, 114, 97, 109, 78, 97, 109, 101, 62, 13, 10, 9, 9, 9, 9, 9, 60, 116, 121, 112, 101, 62, 
			97, 105, 114, 121, 60, 47, 116, 121, 112, 101, 62, 13, 10, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 
			65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 112, 97, 
			97, 109, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 62, 79, 117, 116, 79, 102, 84, 104, 
			115, 87, 111, 114, 108, 100, 60, 47, 112, 97, 114, 97, 109, 65, 110, 110, 111, 116, 97, 116, 
			111, 110, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 112, 97, 114, 97, 109, 65, 110, 110, 111, 116, 97, 
			105, 111, 110, 115, 62, 13, 10, 9, 9, 9, 9, 60, 47, 112, 97, 114, 97, 109, 62, 13, 10, 9, 9, 9, 
			47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 60, 47, 99, 111, 110, 
			116, 114, 117, 99, 116, 111, 114, 62, 13, 10, 9, 60, 47, 112, 114, 111, 112, 101, 114, 116, 
			101, 115, 62, 13, 10, 13, 10, 13, 10, 9, 60, 106, 100, 98, 99, 67, 108, 97, 115, 115, 115, 62, 
			10, 9, 9, 60, 106, 100, 98, 99, 67, 108, 97, 115, 115, 32, 110, 97, 109, 101, 61, 34, 80, 114, 
			118, 105, 100, 101, 114, 83, 101, 114, 118, 105, 99, 101, 76, 111, 99, 97, 116, 105, 111, 110, 
			62, 13, 10, 9, 9, 9, 60, 113, 117, 101, 114, 121, 115, 62, 13, 10, 9, 9, 9, 9, 60, 113, 117, 
			114, 121, 32, 110, 97, 109, 101, 61, 34, 103, 101, 116, 78, 111, 110, 83, 101, 110, 115, 101, 
			62, 13, 10, 9, 9, 9, 9, 9, 60, 102, 111, 114, 109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 9, 83, 
			108, 101, 99, 116, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 72, 69, 76, 80, 95, 87, 65, 78, 84, 69, 68, 
			32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 44, 32, 13, 
			9, 9, 9, 9, 9, 9, 9, 66, 73, 76, 76, 95, 86, 69, 82, 77, 73, 78, 32, 13, 10, 9, 9, 9, 9, 9, 9, 
			102, 114, 111, 109, 32, 100, 105, 110, 105, 110, 103, 82, 111, 111, 109, 32, 13, 10, 9, 9, 9, 
			9, 9, 9, 119, 104, 101, 114, 101, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 36, 36, 66, 73, 76, 76, 95, 
			69, 82, 77, 73, 78, 36, 36, 32, 61, 32, 66, 73, 76, 76, 95, 86, 69, 82, 77, 73, 78, 32, 13, 10, 
			9, 9, 9, 9, 9, 9, 65, 78, 68, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 36, 36, 80, 65, 82, 84, 89, 95, 
			79, 79, 80, 69, 82, 36, 36, 32, 61, 32, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 13, 10, 
			9, 9, 9, 9, 60, 47, 102, 111, 114, 109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 60, 99, 111, 108, 
			109, 110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 32, 106, 97, 118, 
			86, 97, 114, 78, 97, 109, 101, 61, 34, 104, 101, 108, 108, 111, 34, 32, 106, 97, 118, 97, 84, 
			112, 101, 61, 34, 119, 111, 114, 108, 100, 34, 32, 106, 97, 118, 97, 73, 110, 105, 116, 105, 
			108, 86, 97, 108, 117, 101, 61, 34, 48, 34, 62, 72, 69, 76, 80, 95, 87, 65, 78, 84, 69, 68, 60, 
			99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 
			65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 
			9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 66, 73, 76, 76, 95, 86, 69, 82, 77, 73, 78, 
			47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 99, 111, 108, 117, 109, 
			115, 62, 13, 10, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 
			9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 66, 73, 76, 76, 95, 86, 69, 
			77, 73, 78, 60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 13, 10, 9, 9, 9, 9, 9, 9, 
			112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 106, 97, 118, 97, 86, 97, 114, 78, 97, 109, 101, 
			34, 72, 101, 108, 108, 111, 34, 32, 105, 115, 83, 113, 108, 76, 105, 116, 101, 114, 97, 108, 
			34, 116, 114, 117, 101, 34, 32, 106, 97, 118, 97, 84, 121, 112, 101, 61, 39, 106, 97, 118, 97, 
			108, 97, 110, 103, 46, 76, 111, 110, 103, 39, 62, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 
			60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 112, 97, 
			97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 9, 60, 47, 113, 117, 101, 114, 121, 62, 
			10, 9, 9, 9, 9, 60, 113, 117, 101, 114, 121, 32, 110, 97, 109, 101, 61, 34, 103, 101, 116, 69, 
			101, 114, 121, 116, 104, 105, 110, 103, 34, 62, 13, 10, 9, 9, 9, 9, 9, 60, 102, 111, 114, 109, 
			116, 62, 13, 10, 9, 9, 9, 9, 9, 9, 83, 101, 108, 101, 99, 116, 32, 72, 69, 76, 80, 95, 87, 65, 
			84, 69, 68, 44, 32, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 44, 32, 66, 73, 76, 76, 95, 
			69, 82, 77, 73, 78, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 102, 114, 111, 109, 32, 100, 105, 110, 
			110, 103, 82, 111, 111, 109, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 119, 104, 101, 114, 101, 32, 36, 
			66, 82, 69, 65, 68, 95, 66, 85, 84, 84, 69, 82, 36, 36, 32, 61, 32, 66, 82, 69, 65, 68, 95, 66, 
			84, 84, 69, 82, 32, 13, 10, 9, 9, 9, 9, 9, 60, 47, 102, 111, 114, 109, 97, 116, 62, 13, 10, 9, 
			9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 
			109, 110, 62, 72, 69, 76, 80, 95, 87, 65, 78, 84, 69, 68, 60, 47, 99, 111, 108, 117, 109, 110, 
			13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 66, 73, 76, 76, 95, 86, 69, 82, 
			73, 78, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 99, 111, 108, 
			109, 110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 
			13, 10, 9, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 66, 82, 69, 65, 
			95, 66, 85, 84, 84, 69, 82, 60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 13, 10, 9, 
			9, 9, 9, 60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 9, 60, 
			113, 117, 101, 114, 121, 62, 13, 10, 9, 9, 9, 60, 47, 113, 117, 101, 114, 121, 115, 62, 13, 10, 
			9, 60, 47, 106, 100, 98, 99, 67, 108, 97, 115, 115, 62, 13, 10, 9, 9, 9, 60, 106, 100, 98, 99, 
			108, 97, 115, 115, 32, 110, 97, 109, 101, 61, 34, 65, 99, 99, 114, 101, 100, 105, 116, 97, 116, 
			111, 110, 65, 112, 114, 111, 120, 105, 109, 97, 116, 105, 111, 110, 34, 62, 13, 10, 9, 9, 9, 
			113, 117, 101, 114, 121, 115, 62, 13, 10, 9, 9, 9, 9, 60, 113, 117, 101, 114, 121, 32, 110, 97, 
			101, 61, 34, 103, 101, 116, 71, 97, 114, 98, 84, 97, 115, 116, 105, 99, 34, 62, 13, 10, 9, 9, 
			9, 9, 60, 102, 111, 114, 109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 9, 83, 101, 108, 101, 99, 
			32, 72, 69, 76, 73, 67, 79, 80, 84, 69, 82, 44, 32, 68, 79, 87, 78, 95, 72, 65, 87, 75, 95, 66, 
			65, 67, 75, 44, 32, 66, 82, 85, 67, 69, 95, 87, 73, 76, 76, 73, 83, 44, 32, 83, 80, 65, 71, 71, 
			84, 73, 79, 83, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 102, 114, 111, 109, 32, 100, 97, 114, 107, 68, 
			110, 103, 105, 111, 110, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 119, 104, 101, 114, 101, 32, 36, 36, 
			73, 76, 76, 95, 86, 69, 82, 77, 73, 78, 36, 36, 32, 61, 32, 66, 73, 76, 76, 95, 86, 69, 82, 77, 
			78, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 65, 78, 68, 32, 36, 36, 80, 65, 82, 84, 89, 95, 80, 79, 
			80, 69, 82, 36, 36, 32, 61, 32, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 13, 10, 9, 9, 
			9, 9, 60, 47, 102, 111, 114, 109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 
			110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 72, 69, 76, 73, 
			79, 80, 84, 69, 82, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 
			108, 117, 109, 110, 62, 68, 79, 87, 78, 95, 72, 65, 87, 75, 95, 66, 76, 65, 67, 75, 60, 47, 99, 
			108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 66, 82, 
			67, 69, 95, 87, 73, 76, 76, 73, 83, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 
			9, 9, 60, 99, 111, 108, 117, 109, 110, 62, 83, 80, 65, 71, 71, 69, 84, 73, 79, 83, 60, 47, 99, 
			108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 99, 111, 108, 117, 109, 110, 115, 62, 
			10, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 9, 
			9, 60, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 66, 73, 76, 76, 95, 86, 69, 82, 77, 73, 
			60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 114, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 112, 97, 
			97, 109, 101, 116, 101, 114, 32, 116, 121, 112, 101, 61, 39, 106, 97, 118, 97, 46, 108, 97, 
			103, 46, 76, 111, 110, 103, 39, 62, 80, 65, 82, 84, 89, 95, 80, 79, 79, 80, 69, 82, 60, 47, 
			97, 114, 97, 109, 101, 116, 101, 114, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 112, 97, 114, 97, 109, 
			116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 9, 60, 47, 113, 117, 101, 114, 121, 62, 13, 10, 9, 9, 
			9, 9, 60, 113, 117, 101, 114, 121, 32, 110, 97, 109, 101, 61, 34, 103, 101, 116, 83, 116, 117, 
			102, 101, 100, 66, 117, 110, 110, 105, 101, 115, 34, 62, 13, 10, 9, 9, 9, 9, 9, 60, 102, 111, 
			109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 9, 83, 101, 108, 101, 99, 116, 32, 72, 69, 76, 73, 67, 
			80, 84, 69, 82, 44, 32, 68, 79, 87, 78, 95, 72, 65, 87, 75, 95, 66, 76, 65, 67, 75, 44, 32, 66, 
			85, 67, 69, 95, 87, 73, 76, 76, 73, 83, 44, 32, 83, 80, 65, 71, 71, 69, 84, 73, 79, 83, 32, 13, 
			9, 9, 9, 9, 9, 9, 9, 102, 114, 111, 109, 32, 100, 97, 114, 107, 68, 117, 110, 103, 105, 111, 
			32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 119, 104, 101, 114, 101, 32, 36, 36, 68, 79, 87, 78, 95, 72, 
			87, 75, 95, 66, 76, 65, 67, 75, 36, 36, 32, 61, 32, 68, 79, 87, 78, 95, 72, 65, 87, 75, 95, 66, 
			65, 67, 75, 32, 13, 10, 9, 9, 9, 9, 9, 9, 9, 65, 78, 68, 32, 36, 36, 83, 75, 73, 84, 84, 76, 
			83, 36, 36, 32, 61, 32, 83, 75, 73, 84, 84, 76, 69, 83, 13, 10, 9, 9, 9, 9, 9, 60, 47, 102, 
			114, 109, 97, 116, 62, 13, 10, 9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 115, 62, 13, 10, 
			9, 9, 9, 9, 9, 60, 99, 111, 108, 117, 109, 110, 32, 116, 121, 112, 101, 61, 39, 106, 97, 118, 
			46, 108, 97, 110, 103, 46, 108, 111, 110, 103, 39, 62, 68, 79, 87, 78, 95, 72, 65, 87, 75, 95, 
			76, 65, 67, 75, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 99, 111, 
			117, 109, 110, 62, 83, 75, 73, 84, 84, 76, 69, 83, 60, 47, 99, 111, 108, 117, 109, 110, 62, 13, 
			9, 9, 9, 9, 9, 60, 47, 99, 111, 108, 117, 109, 110, 115, 62, 13, 10, 9, 9, 9, 9, 9, 60, 112, 
			114, 97, 109, 101, 116, 101, 114, 115, 62, 13, 10, 9, 9, 9, 9, 9, 9, 60, 112, 97, 114, 97, 109, 
			116, 101, 114, 62, 66, 82, 69, 65, 68, 95, 66, 85, 84, 84, 69, 82, 60, 47, 112, 97, 114, 97, 
			101, 116, 101, 114, 62, 13, 10, 9, 9, 9, 9, 9, 60, 47, 112, 97, 114, 97, 109, 101, 116, 101, 
			115, 62, 13, 10, 9, 9, 9, 9, 60, 47, 113, 117, 101, 114, 121, 62, 13, 10, 9, 9, 9, 60, 47, 113, 
			101, 114, 121, 115, 62, 13, 10, 9, 9, 60, 47, 106, 100, 98, 99, 67, 108, 97, 115, 115, 62, 13, 
			9, 60, 47, 106, 100, 98, 99, 67, 108, 97, 115, 115, 115, 62, 13, 10, 60, 47, 106, 100, 98, 99, 
			101, 109, 112, 108, 97, 116, 101, 115, 62};
}
